{"version":3,"sources":["ImagePicker/index.js"],"names":["Tile","require","InputImageUrl","ImagePicker","props","componentDidMount","document","addEventListener","onDragOver","onDragLeave","componentWillUnmount","removeEventListener","setState","isDragging","onUrlSubmit","event","url","previewImage","alt","selectedTile","call","onDrop","files","image","onDropAccepted","preview","onDropRejected","onClickTile","index","images","onClosePreview","showPreview","disablePreviewImage","state","fileError","urlError","error","showUrlInput","disableUrlInput","initialPreviewImage","map","e","indexOf","bind","disableFileInput","Colors","red_50","Boolean","accept","disableClick","inputProps","maxSize","minSize","multiple","name","onUrlInputChange","urlPlaceholder","display","position","visibility","opacity","margin","React","Component","propTypes","PropTypes","string","func","arrayOf","shape","isRequired","bool","object","number","defaultProps","_","i","Infinity"],"mappings":"okBAAA,4B,2CACA,qC,mDACA,sC,qDACA,6C,2DACA,6BACA,iC,6CACA,qC,k7BAEA,GAAMA,MAAOC,QAAQ,QAAR,CAAb,CACA,GAAMC,eAAgBD,QAAQ,OAAR,CAAtB,C,GAEqBE,Y,oEACnB,qBAAYC,KAAZ,CAAmB,mJACXA,KADW,SA0BnBC,iBA1BmB,CA0BC,UAAM,CACxBC,SAASC,gBAAT,CAA0B,UAA1B,CAAsC,MAAKC,UAA3C,CAAuD,KAAvD,EACAF,SAASC,gBAAT,CAA0B,WAA1B,CAAuC,MAAKE,WAA5C,CAAyD,KAAzD,EACD,CA7BkB,OA+BnBC,oBA/BmB,CA+BI,UAAM,CAC3BJ,SAASK,mBAAT,CAA6B,UAA7B,CAAyC,MAAKH,UAA9C,EACAF,SAASK,mBAAT,CAA6B,UAA7B,CAAyC,MAAKF,WAA9C,EACD,CAlCkB,OAoCnBD,UApCmB,CAoCN,UAAM,CACjB,MAAKI,QAAL,CAAc,CAAEC,WAAY,IAAd,CAAd,EACD,CAtCkB,OAwCnBJ,WAxCmB,CAwCL,UAAM,CAClB,MAAKG,QAAL,CAAc,CAAEC,WAAY,KAAd,CAAd,EACD,CA1CkB,OA4CnBC,WA5CmB,CA4CL,SAACC,KAAD,CAAQC,GAAR,CAAgB,CAC5B,MAAKJ,QAAL,CAAc,CACZK,aAAc,CACZD,OADY,CAEZE,IAAK,mBAFO,CADF,CAKZC,aAAc,CAAC,CALH,CAAd,EAOA,GAAI,MAAKf,KAAL,CAAWU,WAAf,CAA4B,CAC1B,MAAKV,KAAL,CAAWU,WAAX,CAAuBM,IAAvB,OAAkC,CAAEJ,OAAF,CAAlC,EACD,CACF,CAvDkB,OAyDnBK,MAzDmB,CAyDV,SAACC,KAAD,CAAW,CAClB,GAAMC,OAAQD,MAAM,CAAN,CAAd,CACA,GAAI,MAAKlB,KAAL,CAAWiB,MAAf,CAAuB,CACrB,MAAKjB,KAAL,CAAWiB,MAAX,CAAkBD,IAAlB,OAA6BG,KAA7B,EACD,CACF,CA9DkB,OAgEnBC,cAhEmB,CAgEF,SAACF,KAAD,CAAW,CAC1B,GAAMC,OAAQD,MAAM,CAAN,CAAd,CACA,MAAKV,QAAL,CAAc,CACZK,aAAc,CAAED,IAAKO,MAAME,OAAb,CAAsBP,IAAK,eAA3B,CADF,CAEZC,aAAc,CAAC,CAFH,CAGZN,WAAY,KAHA,CAAd,EAKA,GAAI,MAAKT,KAAL,CAAWoB,cAAf,CAA+B,CAC7B,MAAKpB,KAAL,CAAWoB,cAAX,CAA0BJ,IAA1B,OAAqCG,KAArC,EACD,CACF,CA1EkB,OA4EnBG,cA5EmB,CA4EF,SAACJ,KAAD,CAAW,CAC1B,GAAMC,OAAQD,MAAM,CAAN,CAAd,CACA,MAAKV,QAAL,CAAc,CACZK,aAAc,IADF,CAEZE,aAAc,CAAC,CAFH,CAGZN,WAAY,KAHA,CAAd,EAKA,GAAI,MAAKT,KAAL,CAAWsB,cAAf,CAA+B,CAC7B,MAAKtB,KAAL,CAAWsB,cAAX,CAA0BN,IAA1B,OAAqCG,KAArC,EACD,CACF,CAtFkB,OAwFnBI,WAxFmB,CAwFL,SAACC,KAAD,CAAW,CACvB,MAAKhB,QAAL,CAAc,CACZO,aAAcS,KADF,CAEZX,aAAc,IAFF,CAAd,EAIA,GAAI,MAAKb,KAAL,CAAWuB,WAAf,CAA4B,CAC1B,MAAKvB,KAAL,CAAWuB,WAAX,CAAuBP,IAAvB,OAAkC,MAAKhB,KAAL,CAAWyB,MAAX,CAAkBD,KAAlB,CAAlC,CAA4DA,KAA5D,EACD,CACF,CAhGkB,OAkGnBE,cAlGmB,CAkGF,UAAM,CACrB,MAAKlB,QAAL,CAAc,CACZK,aAAc,IADF,CAAd,EAGA,GAAI,MAAKb,KAAL,CAAW0B,cAAf,CAA+B,CAC7B,MAAK1B,KAAL,CAAW0B,cAAX,CAA0BV,IAA1B,QACD,CACF,CAzGkB,OA4GnBW,WA5GmB,CA4GL,iBACZ,CAAC,MAAK3B,KAAL,CAAW4B,mBAAZ,EACE,MAAKC,KAAL,CAAWhB,YADb,EAEE,EAAE,MAAKb,KAAL,CAAW8B,SAAX,EAAwB,MAAK9B,KAAL,CAAW+B,QAAnC,EAA+C,MAAK/B,KAAL,CAAWgC,KAA5D,CAHU,EA5GK,OAkHnBC,YAlHmB,CAkHJ,iBACb;AACA;AACA;AACE,CAAC,CAAC,MAAKJ,KAAL,CAAWhB,YAAZ,EACA,MAAKgB,KAAL,CAAWhB,YAAX,EAA2B,MAAKe,mBADjC,GAEA,CAAC,MAAK5B,KAAL,CAAWkC,eAFb,EAGC,MAAKlC,KAAL,CAAW8B,SAHZ,EAIC,MAAK9B,KAAL,CAAW+B,QAJZ,EAKC,MAAK/B,KAAL,CAAWgC,KATA,GAlHI,CAEjB,MAAKH,KAAL,CAAa,CACXhB,aAAc,IADH,CACU;AACrBE,aAAc,CAAC,CAFJ,CAGXN,WAAY,KAHD,CAAb,CAOA;AACA,GAAI,MAAKT,KAAL,CAAWmC,mBAAX,EAAkC,MAAKnC,KAAL,CAAWmC,mBAAX,GAAmC,IAAzE,CAA+E,CAC7E,GAAMX,OAAQ,MAAKxB,KAAL,CAAWyB,MAAX,CAAkBW,GAAlB,CAAsB,kBAAKC,GAAEzB,GAAP,EAAtB,EAAkC0B,OAAlC,CAA0C,MAAKtC,KAAL,CAAWmC,mBAAX,CAA+BvB,GAAzE,CAAd,CACA,GAAIY,QAAU,CAAC,CAAf,CAAkB,CAChB,MAAKK,KAAL,CAAWd,YAAX,CAA0BS,KAA1B,CACD,CAED;AACA,GAAI,MAAKxB,KAAL,CAAWmC,mBAAX,CAA+BvB,GAAnC,CAAwC,CACtC,MAAKiB,KAAL,CAAWhB,YAAX,CAA0B,CACxBD,IAAK,MAAKZ,KAAL,CAAWmC,mBAAX,CAA+BvB,GADZ,CAExBE,IAAK,MAAKd,KAAL,CAAWmC,mBAAX,CAA+BrB,GAA/B,EAAsC,mBAFnB,CAA1B,CAID,CACF,CAvBgB,aAwBlB,CAmFD;AAMA;+DAYS,iBACP,MACE,sCAAK,UAAU,uBAAf,EACE,yCACG,KAAKd,KAAL,CAAWyB,MAAX,CAAkBW,GAAlB,CAAsB,SAACjB,KAAD,CAAQK,KAAR,QACrB,+BAAC,IAAD,EACE,QACG,OAAKK,KAAL,CAAWhB,YAAX,EAA2B,IAA5B,EACC,OAAKgB,KAAL,CAAWd,YAAX,CAA0B,CAAC,CAA3B,EAAgCS,QAAU,OAAKK,KAAL,CAAWd,YAH1D,CAKE,MAAOI,MAAMP,GALf,CAME,IAAKO,MAAML,GANb,CAOE,IAAKU,KACL;AARF,CASE,QAAS,OAAKD,WAAL,CAAiBgB,IAAjB,CAAsB,IAAtB,CAA4Bf,KAA5B,CATX,CAUE,OAAQA,KAVV,EADqB,EAAtB,CADH,CAeG,CAAC,KAAKxB,KAAL,CAAWwC,gBAAZ,CACC,qCAAK,UAAU,oBAAf,EACE,8BAAC,kBAAD,EACE,UAAU,yBADZ,CAEE,UAAU,KAFZ,CAGE,KAAK,OAHP,CAIE,MAAOC,iBAAOC,MAJhB,CAKE,MAAM,MALR,CAME,KAAMC,QAAQ,KAAK3C,KAAL,CAAW8B,SAAnB,CANR,EAQE,mCAAG,UAAU,qCAAb,EAAoD,KAAK9B,KAAL,CAAW8B,SAA/D,CARF,CADF,CAWI,KAAKH,WAAL,GACA,8BAAC,UAAD,EACE,UAAU,yBADZ,CAEE,KAAK,OAFP,CAGE,KAAK,OAHP,CAIE,QAAS,KAAKD,cAJhB,EADA,CAOE,IAlBN,CAmBE,uCACE,UAAW,yBACT,oCADS,CAET,CAAE,2CAA4C,KAAK1B,KAAL,CAAW8B,SAAzD,CAFS,CADb,CAKE,QAAQ,0BALV,EAOI,KAAKH,WAAL,GACA,qCAAK,UAAU,uCAAf,EACE,qCACE,UAAU,6BADZ,CAEE,IAAK,KAAKE,KAAL,CAAWhB,YAAX,CAAwBD,GAF/B,CAGE,IAAK,KAAKiB,KAAL,CAAWhB,YAAX,CAAwBC,GAH/B,EADF,CADA,CAQI,IAfR,CAgBE,8BAAC,uBAAD,EACE,OAAQ,KAAKd,KAAL,CAAW4C,MADrB,CAEE,UAAW,yBACP,SADO,CAEP,UAFO,CAGP,CAAE,mBAAoB,KAAKf,KAAL,CAAWpB,UAAjC,CAHO,CAFb,CAOE,aAAc,KAAKT,KAAL,CAAW6C,YAP3B,CAQE,WAAY,KAAK7C,KAAL,CAAW8C,UARzB,CASE,QAAS,KAAK9C,KAAL,CAAW+C,OATtB,CAUE,QAAS,KAAK/C,KAAL,CAAWgD,OAVtB,CAWE,SAAU,KAAKhD,KAAL,CAAWiD,QAXvB,CAYE,KAAM,KAAKjD,KAAL,CAAWkD,IAZnB,CAaE,OAAQ,KAAKjC,MAbf,CAcE,eAAgB,KAAKG,cAdvB,CAeE,eAAgB,KAAKE,cAfvB,EAiBE,qCAAK,UAAU,sCAAf,4BAjBF,CAoBE,qCAAK,UAAU,+BAAf,EACE,8BAAC,UAAD,EAAM,KAAK,MAAX,CAAkB,KAAK,SAAvB,EADF,CApBF,CAhBF,CAnBF,CA6DG,KAAKW,YAAL,GAAuB,8BAAC,aAAD,EACtB,cAAe,KAAKjC,KAAL,CAAWmD,gBADJ,CAEtB,SAAU,KAAKzC,WAFO,CAGtB,YAAa,KAAKV,KAAL,CAAWoD,cAHF,CAItB,MAAO,KAAKpD,KAAL,CAAW+B,QAJI,EAAvB,CAKK,IAlER,CADD,CAsEG,IArFN,CADF,CAwFG,KAAK/B,KAAL,CAAWgC,KAAX,CACC,8BAAC,kBAAD,EACE,UAAU,yBADZ,CAEE,UAAU,MAFZ,CAGE,KAAK,OAHP,CAIE,MAAOS,iBAAOC,MAJhB,CAKE,MAAO,CACLW,QAAS,OADJ,CAELC,SAAU,UAFL,CAGLC,WAAY,SAHP,CAILC,QAAS,GAJJ,CAKLC,OAAQ,MALH,CALT,EAaE,mCAAG,UAAU,qCAAb,EAAoD,KAAKzD,KAAL,CAAWgC,KAA/D,CAbF,CADD,CAgBG,IAxGN,CADF,CA4GD,C,yBA3OsC0B,gBAAMC,S,kBAA1B5D,W,CA8OrBA,YAAY6D,SAAZ,CAAwB,CACtB5B,MAAO6B,oBAAUC,MADK,CAGtB;AACAvC,YAAasC,oBAAUE,IAJD,CAIO;AAC7B9C,OAAQ4C,oBAAUE,IALI,CAKE;AACxB3C,eAAgByC,oBAAUE,IANJ,CAMU;AAChCzC,eAAgBuC,oBAAUE,IAPJ,CAOU;AAChCrD,YAAamD,oBAAUE,IARD,CAQQ;AAC9BZ,iBAAkBU,oBAAUE,IATN,CASY;AAClCrC,eAAgBmC,oBAAUE,IAVJ,CAUU;AAEhC;AACAtC,OAAQoC,oBAAUG,OAAV,CAAkBH,oBAAUI,KAAV,CAAgB,CACxCrD,IAAKiD,oBAAUC,MADyB,CAExChD,IAAK+C,oBAAUC,MAFyB,CAAhB,CAAlB,EAGJI,UAhBkB,CAkBtB;AACAtC,oBAAqBiC,oBAAUM,IAnBT,CAoBtBhC,oBAAqB0B,oBAAUI,KAAV,CAAgB,CACnCrD,IAAKiD,oBAAUC,MAAV,CAAiBI,UADa,CAEnCpD,IAAK+C,oBAAUC,MAFoB,CAAhB,CApBC,CAuBlB;AAEJ;AACA;AACA;AACAtB,iBAAkBqB,oBAAUM,IA5BN,CA4BY;AAClCvB,OAAQiB,oBAAUC,MA7BI,CA6BI;AAC1BjB,aAAcgB,oBAAUM,IA9BF,CA8BQ;AAC9B;AACArB,WAAYe,oBAAUO,MAhCA,CAgCQ;AAC9BrB,QAASc,oBAAUQ,MAjCG,CAiCM;AAC5BrB,QAASa,oBAAUQ,MAlCG,CAkCM;AAC5BpB,SAAUY,oBAAUM,IAnCE,CAmCI;AAC1BjB,KAAMW,oBAAUC,MApCM,CAqCtBhC,UAAW+B,oBAAUC,MArCC,CAqCO;AAE7B;AACA5B,gBAAiB2B,oBAAUM,IAxCL,CAwCY;AAClCf,eAAgBS,oBAAUC,MAzCJ,CAyCY;AAClC/B,SAAU8B,oBAAUC,MAAQ;AA1CN,CAAxB,CA6CA/D,YAAYuE,YAAZ,CAA2B,CACzB7C,OAAQ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,EAAaW,GAAb,CAAiB,SAACmC,CAAD,CAAIC,CAAJ,QAAW,CAClC5D,IAAK,6EAD6B,CAElCE,cAAe0D,CAFmB,CAAX,EAAjB,CADiB,CAKzB5C,oBAAqB,KALI,CAMzBO,oBAAqB,IANI,CAQzBK,iBAAkB,KARO,CASzBI,OAAQ,SATiB,CAUzBC,aAAc,KAVW,CAWzBC,WAAY,EAXa,CAYzBC,QAAS0B,QAZgB,CAazBzB,QAAS,CAbgB,CAczBC,SAAU,KAde,CAezBC,KAAM,cAfmB,CAiBzBhB,gBAAiB,KAjBQ,CAkBzBkB,eAAgB,oBAlBS,CAoBzBpB,MAAO,IApBkB,CAqBzBF,UAAW,IArBc,CAsBzBC,SAAU,IAtBe,CAuBzBR,YAAa,sBAAM,CAAE,CAvBI,CAwBzBN,OAAQ,iBAAM,CAAE,CAxBS,CAyBzBG,eAAgB,yBAAM,CAAE,CAzBC,CA0BzBE,eAAgB,yBAAM,CAAE,CA1BC,CA2BzBZ,YAAa,sBAAM,CAAE,CA3BI,CA4BzByC,iBAAkB,2BAAM,CAAE,CA5BD,CA6BzBzB,eAAgB,yBAAM,CAAE,CA7BC,CAA3B,C","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Dropzone from 'react-dropzone';\nimport { Icon } from '../Icon';\nimport Colors from '../Colors';\nimport ArrowBox from '../ArrowBox';\n\nconst Tile = require('./Tile');\nconst InputImageUrl = require('./Url');\n\nexport default class ImagePicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      previewImage: null,  // { url: string, alt: string }\n      selectedTile: -1,\n      isDragging: false,\n    };\n\n\n    // image tile is already selected\n    if (this.props.initialPreviewImage && this.props.initialPreviewImage !== null) {\n      const index = this.props.images.map(e => e.url).indexOf(this.props.initialPreviewImage.url);\n      if (index !== -1) {\n        this.state.selectedTile = index;\n      }\n\n      // url image selected\n      if (this.props.initialPreviewImage.url) {\n        this.state.previewImage = {\n          url: this.props.initialPreviewImage.url,\n          alt: this.props.initialPreviewImage.alt || 'User supplied url',\n        };\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    document.addEventListener('dragover', this.onDragOver, false);\n    document.addEventListener('dragleave', this.onDragLeave, false);\n  }\n\n  componentWillUnmount = () => {\n    document.removeEventListener('dragover', this.onDragOver);\n    document.removeEventListener('dragover', this.onDragLeave);\n  }\n\n  onDragOver = () => {\n    this.setState({ isDragging: true });\n  }\n\n  onDragLeave = () => {\n    this.setState({ isDragging: false });\n  }\n\n  onUrlSubmit = (event, url) => {\n    this.setState({\n      previewImage: {\n        url,\n        alt: 'User supplied url',\n      },\n      selectedTile: -1,\n    });\n    if (this.props.onUrlSubmit) {\n      this.props.onUrlSubmit.call(this, { url });\n    }\n  }\n\n  onDrop = (files) => {\n    const image = files[0];\n    if (this.props.onDrop) {\n      this.props.onDrop.call(this, image);\n    }\n  }\n\n  onDropAccepted = (files) => {\n    const image = files[0];\n    this.setState({\n      previewImage: { url: image.preview, alt: 'preview image' },\n      selectedTile: -1,\n      isDragging: false,\n    });\n    if (this.props.onDropAccepted) {\n      this.props.onDropAccepted.call(this, image);\n    }\n  }\n\n  onDropRejected = (files) => {\n    const image = files[0];\n    this.setState({\n      previewImage: null,\n      selectedTile: -1,\n      isDragging: false,\n    });\n    if (this.props.onDropRejected) {\n      this.props.onDropRejected.call(this, image);\n    }\n  }\n\n  onClickTile = (index) => {\n    this.setState({\n      selectedTile: index,\n      previewImage: null,\n    });\n    if (this.props.onClickTile) {\n      this.props.onClickTile.call(this, this.props.images[index], index);\n    }\n  }\n\n  onClosePreview = () => {\n    this.setState({\n      previewImage: null,\n    });\n    if (this.props.onClosePreview) {\n      this.props.onClosePreview.call(this);\n    }\n  }\n\n  // boolean logic for showing preview image or not\n  showPreview = () =>\n    !this.props.disablePreviewImage &&\n      this.state.previewImage &&\n      !(this.props.fileError || this.props.urlError || this.props.error);\n\n  // boolean logic for showing url input or not\n  showUrlInput = () =>\n    // if there is no previewImage, or the previewImage is disabled,\n    // and urlInput is not disabled, and there are any error messages,\n    // then show the url input\n    (((!this.state.previewImage ||\n      (this.state.previewImage && this.disablePreviewImage)) &&\n      !this.props.disableUrlInput) ||\n      this.props.fileError ||\n      this.props.urlError ||\n      this.props.error);\n\n  render() {\n    return (\n      <div className=\"image-picker--section\">\n        <div>\n          {this.props.images.map((image, index) => (\n            <Tile\n              grayout={(\n                (this.state.previewImage != null) ||\n                (this.state.selectedTile > -1 && index !== this.state.selectedTile)\n              )}\n              image={image.url}\n              alt={image.alt}\n              key={index}\n              // eslint-disable-next-line\n              onClick={this.onClickTile.bind(null, index)}\n              dataId={index}\n            />)\n          )}\n          {!this.props.disableFileInput ? (\n            <div className=\"image-picker--tile\">\n              <ArrowBox\n                className=\"image-picker--arrow-box\"\n                direction=\"top\"\n                icon=\"error\"\n                color={Colors.red_50}\n                width=\"100%\"\n                show={Boolean(this.props.fileError)}\n              >\n                <p className=\"base--p image-picker--error-message\">{this.props.fileError}</p>\n              </ArrowBox>\n              { this.showPreview() ? (\n                <Icon\n                  className=\"image-picker--preview-x\"\n                  type=\"close\"\n                  size=\"small\"\n                  onClick={this.onClosePreview}\n                />\n              ) : null}\n              <label\n                className={classNames(\n                  'image-picker--tile-input-container',\n                  { 'image-picker--tile-input-container_error': this.props.fileError }\n                )}\n                htmlFor=\"image-picker--file-input\"\n              >\n                { this.showPreview() ? (\n                  <div className=\"image-picker--preview-image-container\">\n                    <img\n                      className=\"image-picker--preview-image\"\n                      src={this.state.previewImage.url}\n                      alt={this.state.previewImage.alt}\n                    />\n                  </div>\n                  ) : null}\n                <Dropzone\n                  accept={this.props.accept}\n                  className={classNames(\n                      'content',\n                      'dropzone',\n                      { 'dropzone_on-drag': this.state.isDragging }\n                  )}\n                  disableClick={this.props.disableClick}\n                  inputProps={this.props.inputProps}\n                  maxSize={this.props.maxSize}\n                  minSize={this.props.minSize}\n                  multiple={this.props.multiple}\n                  name={this.props.name}\n                  onDrop={this.onDrop}\n                  onDropAccepted={this.onDropAccepted}\n                  onDropRejected={this.onDropRejected}\n                >\n                  <div className=\"image-picker--tile-input-description\">\n                    Select or drag an image\n                  </div>\n                  <div className=\"image-picker--tile-input-icon\">\n                    <Icon type=\"plus\" size=\"regular\" />\n                  </div>\n                </Dropzone>\n              </label>\n\n              {this.showUrlInput() ? (<InputImageUrl\n                onInputChange={this.props.onUrlInputChange}\n                onSubmit={this.onUrlSubmit}\n                placeholder={this.props.urlPlaceholder}\n                error={this.props.urlError}\n              />) : null}\n\n            </div>\n          ) : null}\n        </div>\n        {this.props.error ? (\n          <ArrowBox\n            className=\"image-picker--arrow-box\"\n            direction=\"none\"\n            icon=\"error\"\n            color={Colors.red_50}\n            style={{\n              display: 'block',\n              position: 'relative',\n              visibility: 'visible',\n              opacity: '1',\n              margin: 'auto',\n            }}\n          >\n            <p className=\"base--p image-picker--error-message\">{this.props.error}</p>\n          </ArrowBox>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nImagePicker.propTypes = {\n  error: PropTypes.string,\n\n  // Event Handlers\n  onClickTile: PropTypes.func, // args: image obj this.props.images, index; when file is clicked\n  onDrop: PropTypes.func, // args: File image; when file is chosen or dragged and dropped\n  onDropAccepted: PropTypes.func, // args: File image; when file is chosen successfully\n  onDropRejected: PropTypes.func, // args: File image; when file is chosen unsuccessfully\n  onUrlSubmit: PropTypes.func,  // when hitting enter as url input is focused\n  onUrlInputChange: PropTypes.func, // event when url input changes\n  onClosePreview: PropTypes.func, // event when preview image is closing\n\n  // tile props\n  images: PropTypes.arrayOf(PropTypes.shape({\n    url: PropTypes.string,\n    alt: PropTypes.string,\n  })).isRequired,\n\n  // preview tile props\n  disablePreviewImage: PropTypes.bool,\n  initialPreviewImage: PropTypes.shape({\n    url: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n  }), // have component display a preview image by default\n\n  // file input props\n  // detailed documentation on dropzone properties can be found at\n  // https://github.com/okonet/react-dropzone\n  disableFileInput: PropTypes.bool, // option to remove File Input / Dropzone component\n  accept: PropTypes.string, // accepted filetypes\n  disableClick: PropTypes.bool, // option to make dropzone clickable or not\n  // file chooser input properties\n  inputProps: PropTypes.object, // eslint-disable-line\n  maxSize: PropTypes.number,  // max file size\n  minSize: PropTypes.number,  // min file size\n  multiple: PropTypes.bool, // option for multiple files\n  name: PropTypes.string,\n  fileError: PropTypes.string, // error message on file input\n\n  // url input props\n  disableUrlInput: PropTypes.bool,  // option to remove url input component\n  urlPlaceholder: PropTypes.string, // placeholder text for url input\n  urlError: PropTypes.string, // error message on url input\n};\n\nImagePicker.defaultProps = {\n  images: [0, 1, 2, 3].map((_, i) => ({\n    url: 'https://placeholdit.imgix.net/~text?txtsize=33&txt=200%C3%97150&w=200&h=150',\n    alt: `Sample ${i}`,\n  })),\n  disablePreviewImage: false,\n  initialPreviewImage: null,\n\n  disableFileInput: false,\n  accept: 'image/*',\n  disableClick: false,\n  inputProps: {},\n  maxSize: Infinity,\n  minSize: 0,\n  multiple: false,\n  name: 'file-chooser',\n\n  disableUrlInput: false,\n  urlPlaceholder: 'Paste an image URL',\n\n  error: null,\n  fileError: null,\n  urlError: null,\n  onClickTile: () => {},\n  onDrop: () => {},\n  onDropAccepted: () => {},\n  onDropRejected: () => {},\n  onUrlSubmit: () => {},\n  onUrlInputChange: () => {},\n  onClosePreview: () => {},\n};\n"]}