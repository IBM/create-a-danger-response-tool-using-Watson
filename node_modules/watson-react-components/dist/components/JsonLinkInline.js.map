{"version":3,"sources":["JsonLinkInline.js"],"names":["JsonLinkInline","props","normalizeJson","json","JSON","parse","description","e","preventDefault","onShow","call","children","Colors","blue_50","showJson","lineNumbers","stringify","onExit","propTypes","PropTypes","oneOfType","string","object","isRequired","element","arrayOf","bool","func","defaultProps"],"mappings":"sFAKwBA,c,CALxB,4B,2CACA,qC,mDACA,sC,qDACA,8B,mFAEe,QAASA,eAAT,CAAwBC,KAAxB,CAA+B,gBAC5C;AACA,GAAMC,eAAgB,QAAhBA,cAAgB,aAAS,OAAOC,KAAP,GAAgB,QAAhB,CAA2BC,KAAKC,KAAL,CAAWF,IAAX,CAA3B,CAA8CA,IAAvD,EAAtB,CAEA,MACE,sCAAK,UAAU,gCAAf,EACE,qCAAK,UAAU,wBAAf,EACGF,MAAMK,WADT,CADF,CAIE,qCAAK,UAAU,0BAAf,EAJF,CAKE,mCACE,QAAS,iBAACC,CAAD,CAAO,CACdA,EAAEC,cAAF,GACAP,MAAMQ,MAAN,CAAaC,IAAb,CAAkB,KAAlB,CAAwBH,CAAxB,EACD,CAJH,CAKE,UAAU,gCALZ,CAME,IAAI,qBANN,CAOE,KAAM,IAPR,EASE,sCAAM,UAAU,wBAAhB,EAA0CN,MAAMU,QAAN,EAAkB,MAA5D,CATF,CAUE,sCAAM,UAAU,0BAAhB,EACE,8BAAC,WAAD,EAAM,KAAK,UAAX,CAAsB,KAAK,OAA3B,CAAmC,KAAMC,cAAOC,OAAhD,EADF,CAVF,CAaE,sCACE,UAAW,yBACT,0BADS,CAET,CAAE,gCAAiCZ,MAAMa,QAAzC,CAFS,CADb,EAME,8BAAC,WAAD,EAAM,KAAK,OAAX,CAAmB,KAAK,OAAxB,CAAgC,KAAMF,cAAOC,OAA7C,EANF,CAbF,CALF,CA2BE,qCACE,UAAW,yBACT,2BADS,CAET,CAAE,iCAAkCZ,MAAMa,QAA1C,CAFS,CADb,EAME,8BAAC,WAAD,EAAM,SAAS,MAAf,CAAsB,YAAab,MAAMc,WAAzC,EACGX,KAAKY,SAAL,CAAed,cAAcD,MAAME,IAApB,CAAf,CAA0C,IAA1C,CAAgD,CAAhD,CADH,CANF,CASE,wCACE,UAAU,0BADZ,CAEE,QAAS,iBAACI,CAAD,CAAO,CACdN,MAAMgB,MAAN,CAAaP,IAAb,CAAkB,KAAlB,CAAwBH,CAAxB,EACD,CAJH,EAME,8BAAC,WAAD,EAAM,KAAK,OAAX,CAAmB,KAAK,MAAxB,EANF,CATF,CA3BF,CADF,CAgDD,CAEDP,eAAekB,SAAf,CAA2B,CACzBf,KAAMgB,oBAAUC,SAAV,CAAoB,CACxBD,oBAAUE,MADc,CAExBF,oBAAUG,MAFc,CAApB,EAGHC,UAJsB,CAKzBZ,SAAUQ,oBAAUC,SAAV,CAAoB,CAC5BD,oBAAUK,OADkB,CAE5BL,oBAAUM,OAAV,CAAkBN,oBAAUK,OAA5B,CAF4B,CAG5BL,oBAAUE,MAHkB,CAApB,CALe,CAUzBP,SAAUK,oBAAUO,IAVK,CAWzBT,OAAQE,oBAAUQ,IAXO,CAYzBlB,OAAQU,oBAAUQ,IAZO,CAYA;AACzBrB,YAAaa,oBAAUK,OAbE,CAczBT,YAAaI,oBAAUO,IAdE,CAA3B,CAiBA1B,eAAe4B,YAAf,CAA8B,CAC5Bd,SAAU,KADkB,CAE5BH,SAAU,MAFkB,CAG5BL,YAAa,yCAHe,CAI5BW,OAAQ,iBAAM,CAAE,CAJY,CAK5BR,OAAQ,iBAAM,CAAE,CALY,CAM5BM,YAAa,KANe,CAA9B,C","file":"JsonLinkInline.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Icon, Colors, Code } from './index';\n\nexport default function JsonLinkInline(props) {\n  // return a js object\n  const normalizeJson = json => (typeof json === 'string' ? JSON.parse(json) : json);\n\n  return (\n    <div className=\"results--json json-link-inline\">\n      <div className=\"json-link-inline--desc\">\n        {props.description}\n      </div>\n      <div className=\"json-link-inline--spacer\" />\n      <a\n        onClick={(e) => {\n          e.preventDefault();\n          props.onShow.call(this, e);\n        }}\n        className=\"base--a json-link-inline--link\"\n        rel=\"noopener noreferrer\"\n        href={null}\n      >\n        <span className=\"json-link-inline--span\">{props.children || 'JSON'}</span>\n        <span className=\"json-link-inline--icon-1\">\n          <Icon type=\"link-out\" size=\"small\" fill={Colors.blue_50} />\n        </span>\n        <span\n          className={classNames(\n            'json-link-inline--icon-2',\n            { 'json-link-inline--icon-2_show': props.showJson }\n          )}\n        >\n          <Icon type=\"right\" size=\"small\" fill={Colors.blue_50} />\n        </span>\n      </a>\n      <div\n        className={classNames(\n          'json-link-inline--overlay',\n          { 'json-link-inline--overlay_show': props.showJson }\n        )}\n      >\n        <Code language=\"json\" lineNumbers={props.lineNumbers}>\n          {JSON.stringify(normalizeJson(props.json), null, 1)}\n        </Code>\n        <button\n          className=\"json-link-inline--button\"\n          onClick={(e) => {\n            props.onExit.call(this, e);\n          }}\n        >\n          <Icon type=\"close\" fill=\"#333\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nJsonLinkInline.propTypes = {\n  json: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n  ]).isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n    PropTypes.string,\n  ]),\n  showJson: PropTypes.bool,\n  onExit: PropTypes.func,\n  onShow: PropTypes.func,  // eslint-disable-line\n  description: PropTypes.element,\n  lineNumbers: PropTypes.bool,\n};\n\nJsonLinkInline.defaultProps = {\n  showJson: false,\n  children: 'JSON',\n  description: <div />,\n  onExit: () => {},\n  onShow: () => {},\n  lineNumbers: false,\n};\n"]}