{"version":3,"sources":["ArrowBox.js"],"names":["ArrowBox","getValue","str","match","getUnit","capitalize","charAt","toUpperCase","slice","hasUnit","bool","length","halfUnit","props","posHeight","manualPositioning","posWidth","height","width","directions","top","bottom","left","relativeOffset","right","none","borderStyle","direction","color","show","className","backgroundColor","style","children","arrowStyle","icon","propTypes","PropTypes","oneOf","concat","IconTypes","string","object","defaultProps","Colors","gray_50"],"mappings":"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","file":"ArrowBox.js","sourcesContent":["/* eslint max-len:off */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Icon, IconTypes } from './Icon';\nimport Colors from './Colors';\n\nconst getValue = str => str.match(/^[0-9]*/g)[0];\nconst getUnit = str => str.match(/[^0-9].*/g)[0];\nconst capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\nconst hasUnit = (str) => {\n  let bool = false;\n  if (typeof str !== 'undefined' &&\n      str !== null &&\n      getValue(str).length > 0) {\n    bool = true;\n  }\n  return bool;\n};\nconst halfUnit = str => (getValue(str) / 2) + getUnit(str);\n\nexport default function ArrowBox(props) {\n  // Use manualPositioning first.\n  // If no manualPositioning, but height/width has a defined unit value\n  // in css, then use half of that. Or else just use 0px.\n  let posHeight = props.manualPositioning;\n  let posWidth = props.manualPositioning;\n\n  if (!posHeight) {\n    if (hasUnit(props.height)) {\n      posHeight = halfUnit(props.height);\n    } else {\n      posHeight = '0px';\n    }\n  }\n\n  if (!posWidth) {\n    if (hasUnit(props.width)) {\n      posWidth = halfUnit(props.width);\n    } else {\n      posWidth = '0px';\n    }\n  }\n\n  const directions = {\n    top: {\n      bottom: 'calc(100% + 1rem)',\n      left: `calc(${props.relativeOffset} - ${posWidth})`,\n    },\n    right: {\n      left: 'calc(100% + 1rem)',\n      top: `calc(${props.relativeOffset} - ${posHeight})`,\n    },\n    bottom: {\n      top: 'calc(100% + 1rem)',\n      left: `calc(${props.relativeOffset} - ${posWidth})`,\n    },\n    left: {\n      right: 'calc(100% + 1rem)',\n      top: `calc(${props.relativeOffset} - ${posHeight})`,\n    },\n    none: {},\n  };\n  const borderStyle = {};\n  if (props.direction !== 'none') {\n    borderStyle[`border${capitalize(props.direction)}Color`] = props.color;\n  }\n\n  return (\n    <div\n      className={classNames(\n        'arrow-box',\n        { 'arrow-box_top': props.direction === 'top' },\n        { 'arrow-box_right': props.direction === 'right' },\n        { 'arrow-box_bottom': props.direction === 'bottom' },\n        { 'arrow-box_left': props.direction === 'left' },\n        { 'arrow-box_no-arrow': props.direction === 'none' },\n        { 'arrow-box_hidden': !props.show },\n        props.className\n      )}\n      style={Object.assign(\n        directions[props.direction],\n        { width: props.width },\n        { height: props.height },\n        { backgroundColor: props.color },\n        props.style\n      )}\n    >\n      { // eslint-disable-next-line react/prop-types\n        props.children }\n      <span\n        className=\"arrow-box--arrow\"\n        style={Object.assign(\n          borderStyle,\n          props.arrowStyle\n        )}\n      />\n      { props.icon ?\n        (<Icon\n          className=\"arrow-box--icon\"\n          type={props.icon}\n          size=\"regular\"\n          fill={props.color}\n        />) : null }\n    </div>\n  );\n}\n\nArrowBox.propTypes = {\n  direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left', 'none']),\n  show: PropTypes.bool,\n  icon: PropTypes.oneOf([].concat(IconTypes, null)),\n  color: PropTypes.string,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  // Offset from element that arrow box is relative to.\n  // Ex. if relativeOffset = '50%', then the arrow box is\n  // 50% of the main element's width or height\n  relativeOffset: PropTypes.string,  // css values in string form\n  manualPositioning: PropTypes.string,  // css values in string form\n  // style and arrowStyle are inline css style objects\n  style: PropTypes.object,  // eslint-disable-line\n  arrowStyle: PropTypes.object,  // eslint-disable-line\n  className: PropTypes.string,\n};\n\nArrowBox.defaultProps = {\n  direction: 'top',\n  show: false,\n  width: '15rem',\n  height: 'auto',\n  relativeOffset: '50%',\n  manualPositioning: null,\n  icon: null,\n  color: Colors.gray_50,\n  className: '',\n};\n"]}