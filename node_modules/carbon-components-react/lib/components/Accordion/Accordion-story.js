"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _addonActions = require("@storybook/addon-actions");

var _addonKnobs = require("@storybook/addon-knobs");

var _Accordion = _interopRequireWildcard(require("../Accordion"));

var _Button = _interopRequireDefault(require("../Button"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var props = {
  onClick: (0, _addonActions.action)('onClick'),
  onHeadingClick: (0, _addonActions.action)('onHeadingClick')
};
(0, _react2.storiesOf)('Accordion', module).addDecorator(_addonKnobs.withKnobs).add('Default', function () {
  return _react.default.createElement(_Accordion.default, {
    align: (0, _addonKnobs.select)('Accordion heading alignment (align)', ['start', 'end'], 'end')
  }, _react.default.createElement(_Accordion.AccordionItem, _extends({
    title: (0, _addonKnobs.text)('The title (title)', 'Section 1 title'),
    open: (0, _addonKnobs.boolean)('Open the section (open)', false)
  }, props), _react.default.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")), _react.default.createElement(_Accordion.AccordionItem, _extends({
    title: "Section 2 title"
  }, props), _react.default.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")), _react.default.createElement(_Accordion.AccordionItem, _extends({
    title: "Section 3 title"
  }, props), _react.default.createElement(_Button.default, null, "This is a button.")), _react.default.createElement(_Accordion.AccordionItem, _extends({
    title: _react.default.createElement("span", null, "Section 4 title (", _react.default.createElement("em", null, "the title can be a node"), ")")
  }, props), _react.default.createElement("p", null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.")));
}, {
  info: {
    text: "\n          Accordions allow users to expand and collapse sections of content.\n        "
  }
}).add('skeleton', function () {
  return _react.default.createElement("div", {
    style: {
      width: '500px'
    }
  }, _react.default.createElement(_Accordion.AccordionSkeleton, {
    align: (0, _addonKnobs.select)('Accordion heading alignment (align)', ['start', 'end'], 'end'),
    open: (0, _addonKnobs.boolean)('Show first item opened (open)', true),
    count: (0, _addonKnobs.number)('Set number of items (count)', 4)
  }));
}, {
  info: {
    text: "\n          Accordions allow users to expand and collapse sections of content.\n        "
  }
});